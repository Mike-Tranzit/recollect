<?php

/**
 * This is the model base class for the table "tasks_for_installers".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TasksForInstallers".
 *
 * Columns in table "tasks_for_installers" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $plate
 * @property string $date_create
 * @property integer $glonass_id
 * @property integer $status
 * @property integer $type
 * @property integer $user_id_add
 * @property integer $user_id_complete
 * @property string $date_complete
 * @property integer $obj_id
 *
 */
abstract class BaseTasksForInstallers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'glonass_crm.tasks_for_installers';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TasksForInstallers|TasksForInstallers', $n);
	}

	public static function representingColumn() {
		return 'plate';
	}

	public function rules() {
		return array(
			array('glonass_id, status, type, user_id_add, user_id_complete, obj_id', 'numerical', 'integerOnly'=>true),
			array('plate', 'length', 'max'=>10),
			array('date_create, date_complete', 'safe'),
			array('plate, date_create, glonass_id, status, type, user_id_add, user_id_complete, date_complete, obj_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, plate, date_create, glonass_id, status, type, user_id_add, user_id_complete, date_complete, obj_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		    'Sanctions'=>array(self::HAS_MANY, 'Sanctions', array('obj_id'=>'obj_id'))
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'plate' => Yii::t('app', 'Plate'),
			'date_create' => Yii::t('app', 'Date Create'),
			'glonass_id' => Yii::t('app', 'Glonass'),
			'status' => Yii::t('app', 'Status'),
			'type' => Yii::t('app', 'Type'),
			'user_id_add' => Yii::t('app', 'User Id Add'),
			'user_id_complete' => Yii::t('app', 'User Id Complete'),
			'date_complete' => Yii::t('app', 'Date Complete'),
			'obj_id' => Yii::t('app', 'Obj'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('plate', $this->plate, true);
		$criteria->compare('date_create', $this->date_create, true);
		$criteria->compare('glonass_id', $this->glonass_id);
		$criteria->compare('status', $this->status);
		$criteria->compare('type', $this->type);
		$criteria->compare('user_id_add', $this->user_id_add);
		$criteria->compare('user_id_complete', $this->user_id_complete);
		$criteria->compare('date_complete', $this->date_complete, true);
		$criteria->compare('obj_id', $this->obj_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}